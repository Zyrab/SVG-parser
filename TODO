# 🛠️ TODO - Parsect

---

## ✅ Completed Features

- [x] Copy/export of current canvas state
- [x] Dark and Light mode support
- [x] SVG `<g>` group support
- [x] SVG `<transform>` support
- [x] SVG `<linearGradient>` support
- [x] Basic SVG shapes (`<rect>`, `<circle>`, `<path>`, `<polygon>`, `<polyline>`, `<line>`, `<ellipse>`) support
- [x] SVG `<style>`, `<fill>`, `<stroke>`, `<stroke-width>`, and `<opacity>` support
- [x] `<path d="...">` to `Path2D` conversion

---

## 🐞 Bug Fixes

- [x] Fix transformation application issues on S curve commands

---

## ♻️ Core Refactoring & Code Quality

- [x] Refactor core logic for readability and modularity
- [x] Clean up rendering pipeline for better maintainability

---

## 🚀 Parsing & Rendering Enhancements

- [ ] Add support for `<radialGradient>`
- [ ] Add support for SVG `<filter>` elements
- [ ] Implement basic SVG syntax validator (optional strict mode)

---

## 🎨 Shape Display, Inspector & Interaction

- [ ] Display all SVG shapes on the right side with:
  - Type (Path, Rect, Circle, etc.)
  - Fill, Stroke, Path complexity
- [ ] Add click-to-select functionality for each shape
- [ ] Allow rendering only the selected SVG shape
- [ ] Show visual feedback for unsupported SVG elements

---

## ➕ Shape Merging and Discarding

- [ ] Add "Merge" button next to each shape
- [ ] Auto-detect similar paths (fill, stroke, position)
- [ ] Merge similar paths into a single optimized `Path2D`
- [ ] Add "Discard" button for redundant/invisible shapes
- [ ] Preview changes before discarding
- [ ] Confirm discards for important shapes

---

## ⚠️ Shape Size & Optimization Warnings

- [ ] Warn when a shape exceeds a size threshold
- [ ] Suggest optimizations for large, redundant, or complex shapes
- [ ] Allow manual path simplification

---

## 💅 UI / UX Improvements

- [x] Fix scroll indicator styling and behavior
- [x] Apply custom UI styles for polished interface
- [ ] Add helpful links, tooltips, and contextual texts
- [ ] Implement undo/redo functionality

---

## 📈 Performance, Analytics & Debugging

- [ ] Implement performance profiling (render times, filters)
- [ ] Add simple self-hosted analytics (unique visitors)
- [ ] Plan future analytics (shape complexity, memory usage)
- [ ] Add a debug panel (show transformation matrices, render state)

---

## 🧪 Testing & Validation

- [ ] Test tool with simple and complex SVGs
- [ ] Ensure merging and discarding maintain visual integrity
- [ ] Validate tool's performance on large SVG files

---

## 📚 Documentation

- [ ] Write basic user documentation:
  - How to merge/discard shapes
  - When and why optimization suggestions appear

---

## 🎞️ Future Features: Animation & Frame Extraction

- [ ] Parse basic SVG animations (`<animate>`, `<animateTransform>`, etc.)
- [ ] Allow setting FPS and extract frames
- [ ] Generate optimized sprite-like maps from frames
- [ ] Export selected frames as SVG/PNG/web formats
- [ ] Add keyboard shortcuts (zoom, step frame, etc.)

---

## 💡 Ideas / Exploratory

- [ ] Save/load custom user settings (UI, view state)
